[[plugins]]
repo = 'Shougo/denite.nvim'
if = "has('python3') && has('nvim')"
on_event = 'VimEnter'
hook_post_source="""
    " use ripgrep
    if executable('rg')
      call denite#custom#var('file/rec', 'command',
            \ ['rg', '--files', '--hidden', '--glob', '!.git'])
      call denite#custom#var('grep', 'command', ['rg'])
	endif

    autocmd FileType denite call s:denite_my_settings()
    function! s:denite_my_settings() abort
      nnoremap <silent><buffer><expr> <CR>
      \ denite#do_map('do_action')
      nnoremap <silent><buffer><expr> d
      \ denite#do_map('do_action', 'delete')
      nnoremap <silent><buffer><expr> p
      \ denite#do_map('do_action', 'preview')
      nnoremap <silent><buffer><expr> q
      \ denite#do_map('quit')
      nnoremap <silent><buffer><expr> i
      \ denite#do_map('open_filter_buffer')
      nnoremap <silent><buffer><expr> <Space>
      \ denite#do_map('toggle_select').'j'
    endfunction
    call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
    call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
    " keymap
    nnoremap <Space>; :Denite file/rec<CR>
    nnoremap <Space>g :Denite grep<CR>
    nnoremap <Space>o :Denite file/old<CR>
"""

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('python3')"
on_event = 'InsertEnter'
hook_post_source = """
    let g:deoplete#enable_at_startup = 0
    call deoplete#enable()
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#file#enable_buffer_path = 1
    call deoplete#custom#source('LanguageClient', 'min_pattern_length', 2)
"""

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
if = "has('python3') && has('nvim')"
depends = ['deoplete.nvim']
hook_post_update = """
    call system("git submodule update --init")
"""

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'javascript'
if = "has('python3') && has('nvim')"
depends = ['deoplete.nvim']
build = 'npm i -g tern'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
on_event = 'InsertEnter'
depends = ['deoplete.nvim']
rev = 'next'
build = 'sh install.sh'
hook_add = """
    set hidden
    set runtimepath+=~/.vim/dein/repos/github.com/autozimu/LanguageClient-neovim_next
    let g:LanguageClient_serverCommands = {
        \ 'javascript': ['javascript-typescript-stdio'],
        \ 'typescript.tsx': ['typescript-language-server', '--stdio'],
        \ 'typescript': ['typescript-language-server', '--stdio'],
        \ 'python': ['pyls'],
        \ 'go': ['gopls'],
        \ 'cpp': ['clangd'],
        \ 'c': ['clangd'],
        \ 'rust': ['rls'],
        \ }
    let g:LanguageClient_fzfContextMenu = 0
    let g:LanguageClient_autoStart = 1
    set completefunc=LanguageClient#complete
    set formatexpr=LanguageClient#textDocument_rangeFormatting_sync()
    " autocmd BufWritePre *.go :call LanguageClient#textDocument_formatting_sync()

    nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
    nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
    nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
"""

[[plugins]]
repo = 'Shougo/defx.nvim'
if = "has('python3')"
on_event = 'VimEnter'
hook_post_source = '''
	autocmd FileType defx call s:defx_my_settings()
	function! s:defx_my_settings() abort
	  " Define mappings
	  nnoremap <silent><buffer><expr> <CR>
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> c
	  \ defx#do_action('copy')
	  nnoremap <silent><buffer><expr> m
	  \ defx#do_action('move')
	  nnoremap <silent><buffer><expr> p
	  \ defx#do_action('paste')
	  nnoremap <silent><buffer><expr> l
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> E
	  \ defx#do_action('open', 'vsplit')
	  nnoremap <silent><buffer><expr> P
	  \ defx#do_action('open', 'pedit')
	  nnoremap <silent><buffer><expr> K
	  \ defx#do_action('new_directory')
	  nnoremap <silent><buffer><expr> N
	  \ defx#do_action('new_file')
	  nnoremap <silent><buffer><expr> d
	  \ defx#do_action('remove')
	  nnoremap <silent><buffer><expr> r
	  \ defx#do_action('rename')
	  nnoremap <silent><buffer><expr> x
	  \ defx#do_action('execute_system')
	  nnoremap <silent><buffer><expr> yy
	  \ defx#do_action('yank_path')
	  nnoremap <silent><buffer><expr> .
	  \ defx#do_action('toggle_ignored_files')
	  nnoremap <silent><buffer><expr> h
	  \ defx#do_action('cd', ['..'])
	  nnoremap <silent><buffer><expr> ~
	  \ defx#do_action('cd')
	  nnoremap <silent><buffer><expr> q
	  \ defx#do_action('quit')
	  nnoremap <silent><buffer><expr> <Space>
	  \ defx#do_action('toggle_select') . 'j'
	  nnoremap <silent><buffer><expr> *
	  \ defx#do_action('toggle_select_all')
	  nnoremap <silent><buffer><expr> j
	  \ line('.') == line('$') ? 'gg' : 'j'
	  nnoremap <silent><buffer><expr> k
	  \ line('.') == 1 ? 'G' : 'k'
	  nnoremap <silent><buffer><expr> <C-l>
	  \ defx#do_action('redraw')
	  nnoremap <silent><buffer><expr> <C-g>
	  \ defx#do_action('print')
	  nnoremap <silent><buffer><expr> cd
	  \ defx#do_action('change_vim_cwd')
	endfunction
'''
