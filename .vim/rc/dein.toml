[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'tomasr/molokai'
hook_add='''
    if (has('win32') && !has('gui_running') && $ConEmuANSI == 'ON')
        set term=xterm
        set t_Co=256
        let &t_AB="\e[48;5;%dm"
        let &t_AF="\e[38;5;%dm"
    endif
    au MyAutoCmd VimEnter * nested colorscheme molokai
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = {
    \	"cpp" : {
    \		"command": "g++",
    \		"cmdopt" : "-std=c++14",
    \	},
    \ }

    let g:quickrun_config = get(g:, 'quickrun_config', {})
    let g:quickrun_config['watchdogs_checker/_'] = {
        \   'runner' : 'vimproc',
        \   'runner/vimproc/sleep' : 10,
        \   'runner/vimproc/updatetime' : 500,
        \   'outputter/buffer/split' : ':botright 4sp',
        \   'outputter/quickfix/open_cmd' : "",
        \   'hook/echo/enable' : 0,
        \   'hook/echo/output_success': '> No Errors Found.',
        \   'hook/back_window/enable' : 1,
        \   'hook/back_window/enable_exit' : 1,
        \   'hock/close_buffer/enable_hock_loaded' : 1,
        \   'hock/close_buffer/enable_success' : 1,
        \   'hook/qfstatusline_update/enable_exit' : 1,
        \   'hook/qfstatusline_update/priority_exit' : 4,
        \ }
'''
hook_post_update = '''
    let g:quickrun_config = {
    \   '*' : {
    \       "hook/time/enable" : 1
    \   },
    \}
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    set laststatus=2
    let g:lightline = {
        \   'colorscheme': 'powerline',
        \   }
'''
